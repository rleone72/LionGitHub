###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2021. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4adeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 21.0.2
  annotations:
    ansible.sdk.operatorframework.io/verbosity: "7"
spec:
  ##########################################################################
  appVersion: 21.0.2
  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: accept
  #####################################################################################################################
  ##  The contents of this template CR file reflect only the specific parameters and configuration
  ##  settings applicable to the represented ICP4A capability.
  ##
  ##  These values/configuration sections are to be used when manually assembling or updating the main
  ##  ICP4A CR that is being applied in order to install an ICP4A environment.
  ##
  ##  If you are in the process of preparing a new install of an ICP4A environment,
  ##  you should merge the required values and configuration sections from this file into the
  ##  starting point CR template: ibm_cp4a_cr_enterprise_foundation.yaml available in the
  ##  same location as this template.
  ##
  ##  If you updating an existing ICP4A environment, you should merge the required values and configuration
  ##  sections from this template in the main ICP4A CR file already applied in the environment.
  ##
  ######################################################################################################################
  olm_ent_option_content:
    cmis: true
    css: true
    es: false
    iccsap: false
    ier: false
    tm: false
    ums: true
  shared_configuration:
    no_log: false
    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the rest of the licenses.
    sc_deployment_fncm_license: "non-production"
    ## Business Automation Workflow (BAW) license and possible values are: user, non-production, and production.
    ## This value could be different from the other licenses in the CR.
    sc_deployment_baw_license: "non-production"
    ## Use this parameter to specify the license for the CP4A deployment and
    ## the possible values are: non-production and production and if not set, the license will
    ## be defaulted to production.  This value could be different from the other licenses in the CR.
    sc_deployment_license: "non-production"
    ## All CP4A components must use/share the same docker image repository.  For example, if IBM Entitled Registry is used, then
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.
    sc_image_repository: cp.icr.io
    ## All CP4A components must use/share the root_ca_secret in order for integration.
    root_ca_secret_enabled: true
    root_ca_secret: icp4a-root-ca
    ## external_tls_certificate_secret: swissgov-ssl-wildcard
    ## CP4A patterns or capabilities to be deployed.  This CR represents the "workflow" pattern, which includes the following
    ## mandatory components: ban(Business Automation Navigator), ums (User Management Service), rr (Resource registry), app_engine( Application Engine) and optional components: bai
    sc_deployment_patterns: "foundation,content,workflow"
    ## The optional components to be installed if listed here.  This is normally populated by the User script based on input from the user.
    ## The optional components are: bai,ae_data_persistence
    sc_optional_components: "ae_data_persistence,cmis,css,ums"
    ## The deployment type as selected by the user.  Possible values are: demo, enterprise.
    sc_deployment_type: "enterprise"
    ## The platform to be deployed specified by the user.  Possible values are: OCP and ROKS.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform: "OCP"
    ## This is the deployment hostname suffix, this is optional and the default hostname suffix will be used as {meta.namespace}.router-canonicalhostname
    # sc_deployment_hostname_suffix: "{{ meta.namespace }}.<Required>"
    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false
    ## For ROKS Ingress, provide TLS secret name for Ingress controller. If you are not using ROKS, comment out this line.
    ## sc_ingress_tls_secret_name: <Required>
    ## This is the deployment hostname suffix, this is optional and the default hostname suffix will be used as {meta.namespace}.router-canonicalhostname
    sc_deployment_hostname_suffix: "{{ meta.namespace }}.apps.ccp11-e.atlantica.admin.ch"
    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of
    ## the external service to the component's truststore.
    trusted_certificate_list: [swissgov-intra-ssl-secret,swissgov-root-ssl-secret,ldap-db00048a-ssl-secret,ldap-db00049a-ssl-secret,ldap-db00050a-ssl-secret,ldap-db00051a-ssl-secret,ldap-lds-ssl-secret,oc-cluster-ssl-secret]
    ## On OCP 3.x and 4.x, the User script will populate these three (3) parameters based on your input for "enterprise" deployment.
    ## If you manually deploying without using the User script, then you would provide the different storage classes for the slow, medium
    ## and fast storage parameters below.  If you only have 1 storage class defined, then you can use that 1 storage class for all 3 parameters.
    storage_configuration:
      sc_slow_file_storage_classname: nas-ssd-basic
      sc_medium_file_storage_classname: nas-ssd-basic
      sc_fast_file_storage_classname: nas-ssd-basic
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID.
    ## For non-OCP (e.g., CNCF platforms such as AWS, GKE, etc), this parameter is optional. It is not supported on OCP and ROKS.
    sc_run_as_user:
    ## Enable/disable ECM (FNCM) / BAN initialization (e.g., creation of P8 domain, creation/configuration of object stores,
    ## creation/configuration of CSS servers, and initialization of Navigator (ICN)).  If the "initialize_configuration" section
    ## is defined in the CR (below), then that configuration will take precedence overriding this parameter.
    # sc_content_initialization: true
    sc_content_initialization: false
    ## OR
    ## If you want to enable the initialize for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_initialization: false
    # sc_content_initialization:
    #  cpe: false
    #  css: false
    #  ban: false

    ## Enable/disable the ECM (FNCM) / BAN verification (e.g., creation of test folder, creation of test document,
    ## execution of CBR search, and creation of Navigator demo repository and desktop).  If the "verify_configuration"
    ## section is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously verified.
    sc_content_verification: false
    ## OR
    ## If you want to enable the verification for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_verification: false
    # sc_content_verification:
    #  cpe: false
    #  css: false
    #  ban: false

    ## Shared encryption key secret name that is used for Workflow or Workstream Services and Process Federation Server integration.
    ## This secret is also used by Workflow and BAStudio to store AES encryption key.
    encryption_key_secret: ibm-iaws-shared-key-secret
    sc_cpe_limited_storage: false
    image_pull_secrets:
    - admin.registrykey
  ## The beginning section of LDAP configuration for CP4A
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "Microsoft Active Directory"
    ## The name of the LDAP server to connect
    lc_ldap_server: "db00048a.sszadmbit.sszad.admin.ch"
    ## The port of the LDAP server to connect. Some possible values are: 389, 636, etc.
    lc_ldap_port: "636"
    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: "ldap-bind-secret"
    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
    ## Enable SSL/TLS for LDAP communication. Refer to Knowledge Center for more info.
    lc_ldap_ssl_enabled: true
    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "ldap-ssl-secret"
    ## The LDAP user name attribute. Semicolon-separated list that must include the first RDN user distinguished names. One possible value is "*:uid" for TDS and "user:sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_name_attribute: "user:samAccountName"
    ## The LDAP user display name attribute. One possible value is "cn" for TDS and "sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_display_name_attr: "cn"
    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "OU=EFD-BIT-EASY-Server,OU=Server,OU=BIT,OU=LESD,DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
    ## The LDAP group name attribute.  One possible value is "*:cn" for TDS and "*:cn" for AD. Refer to Knowledge Center for more info.
    lc_ldap_group_name_attribute: "*:samAccountName"
    ## The LDAP group display name attribute.  One possible value for both TDS and AD is "cn". Refer to Knowledge Center for more info.
    lc_ldap_group_display_name_attr: "cn"
    ## The LDAP group membership search filter string.  One possible value is "(|(&(objectclass=groupofnames)(member={0}))(&(objectclass=groupofuniquenames)(uniquemember={0})))" for TDS
    ## and "(&(cn=%v)(objectcategory=group))" for AD.
    lc_ldap_group_membership_search_filter: "(&(cn=%v)(objectcategory=group))"
    ## The LDAP group membership ID map.  One possible value is "groupofnames:member" for TDS and "memberOf:member" for AD.
    lc_ldap_group_member_id_map: "memberOf:member"
    ## The User script will uncomment the section needed based on user's input from User script.  If you are deploying without the User script,
    ## uncomment the necessary section (depending if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    ad:
      lc_ad_gc_host: "db00048a.sszadmbit.sszad.admin.ch"
      lc_ad_gc_port: "3269"
      lc_user_filter: "(&(cn=%v)(objectclass=person))"
      lc_group_filter: "(&(cn=%v)(objectcategory=group))"
      # tds:
      #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
      #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"
  ## User script should only uncomment this section if External Share if selected as an optional component.
  ## If you are deploying without the User script, uncomment the necessary section (depending
  ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
  # ext_ldap_configuration:
  #   lc_selected_ldap_type: "Microsoft Active Directory"
  #   lc_ldap_server: "<Required>"
  #   lc_ldap_port: "<Required>"
  #   lc_bind_secret: ldap-bind-secret
  #   lc_ldap_base_dn: "<Required>"
  #   lc_ldap_ssl_enabled: true
  #   lc_ldap_ssl_secret_name: "<Required>"
  #   lc_ldap_user_name_attribute: "<Required>"
  #   lc_ldap_user_display_name_attr: "<Required>"
  #   lc_ldap_group_base_dn: "<Required>"
  #   lc_ldap_group_name_attribute: "<Required>"
  #   lc_ldap_group_display_name_attr: "cn"
  #   lc_ldap_group_membership_search_filter: "<Required>"
  #   lc_ldap_group_member_id_map: "<Required>"
  #ldap_configuration_db00049a:
  #  lc_ldap_id: "db00049a" 
  #  lc_selected_ldap_type: "Microsoft Active Directory"
  #  lc_ldap_server: "db00048a.sszadmbit.sszad.admin.ch"
  #  lc_ldap_port: "636"
  #  lc_bind_secret: "ldap-bind-secret"
  #  lc_ldap_base_dn: "DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_ssl_enabled: true
  #  lc_ldap_ssl_secret_name: "ldap-db00049a-ssl-secret"
  #  lc_ldap_user_name_attribute: "user:samAccountName"
  #  lc_ldap_user_display_name_attr: "cn"
  #  lc_ldap_group_base_dn: "OU=EFD-BIT-EASY-Server,OU=Server,OU=BIT,OU=LESD,DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_group_name_attribute: "*:samAccountName"
  #  lc_ldap_group_display_name_attr: "cn"
  #  lc_ldap_group_membership_search_filter: "(&(cn=%v)(objectcategory=group))"
  #  lc_ldap_group_member_id_map: "memberOf:member"
  #  ad:
  #    lc_ad_gc_host: "db00049a.sszadmbit.sszad.admin.ch"
  #    lc_ad_gc_port: "3269"
  #    lc_user_filter: "(&(cn=%v)(objectclass=person))"
  #    lc_group_filter: "(&(cn=%v)(objectcategory=group))"
 
  #ldap_configuration_db00050a:
  #  lc_ldap_id: "db00050a"
  #  lc_selected_ldap_type: "Microsoft Active Directory"
  #  lc_ldap_server: "db00050a.sszadmbit.sszad.admin.ch"
  #  lc_ldap_port: "636"
  #  lc_bind_secret: "ldap-bind-secret"
  #  lc_ldap_base_dn: "DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_ssl_enabled: true
  #  lc_ldap_ssl_secret_name: "ldap-db00050a-ssl-secret"
  #  lc_ldap_user_name_attribute: "user:samAccountName"
  #  lc_ldap_user_display_name_attr: "cn"
  #  lc_ldap_group_base_dn: "OU=EFD-BIT-EASY-Server,OU=Server,OU=BIT,OU=LESD,DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_group_name_attribute: "*:samAccountName"
  #  lc_ldap_group_display_name_attr: "cn"
  #  lc_ldap_group_membership_search_filter: "(&(cn=%v)(objectcategory=group))"
  #  lc_ldap_group_member_id_map: "memberOf:member"
  #  ad:
  #    lc_ad_gc_host: "db00050a.sszadmbit.sszad.admin.ch"
  #    lc_ad_gc_port: "3269"
  #    lc_user_filter: "(&(cn=%v)(objectclass=person))"
  #    lc_group_filter: "(&(cn=%v)(objectcategory=group))" 

  #ldap_configuration_db00051a:
  #  lc_ldap_id: "db00051a"
  #  lc_selected_ldap_type: "Microsoft Active Directory"
  #  lc_ldap_server: "db00051a.sszadmbit.sszad.admin.ch"
  #  lc_ldap_port: "636"
  #  lc_bind_secret: "ldap-bind-secret"
  #  lc_ldap_base_dn: "DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_ssl_enabled: true
  #  lc_ldap_ssl_secret_name: "ldap-db00051a-ssl-secret"
  #  lc_ldap_user_name_attribute: "user:samAccountName"
  #  lc_ldap_user_display_name_attr: "cn"
  #  lc_ldap_group_base_dn: "OU=EFD-BIT-EASY-Server,OU=Server,OU=BIT,OU=LESD,DC=sszadmbit,DC=sszad,DC=admin,DC=ch"
  #  lc_ldap_group_name_attribute: "*:samAccountName"
  #  lc_ldap_group_display_name_attr: "cn"
  #  lc_ldap_group_membership_search_filter: "(&(cn=%v)(objectcategory=group))"
  #  lc_ldap_group_member_id_map: "memberOf:member"
  #  ad:
  #    lc_ad_gc_host: "db00051a.sszadmbit.sszad.admin.ch"
  #    lc_ad_gc_port: "3269"
  #    lc_user_filter: "(&(cn=%v)(objectclass=person))"
  #    lc_group_filter: "(&(cn=%v)(objectcategory=group))"
  
  ldap_configuration_lds:
    lc_ldap_id: "lds"
    lc_selected_ldap_type: "Microsoft Active Directory"
    lc_ldap_server: "lds.eiam-a.admin.ch"
    lc_ldap_port: "636"
    lc_bind_secret: "ldap-bind-secret"
    lc_ldap_base_dn: "CN=ESTV-EASY,CN=eIAM,CN=eiam,DC=lds,DC=eiam-a,DC=admin,DC=ch"
    lc_ldap_ssl_enabled: true
    lc_ldap_ssl_secret_name: "ldap-lds-ssl-secret"
    lc_ldap_user_name_attribute: "*:uid"
    lc_ldap_user_display_name_attr: "displayName"
    lc_ldap_group_base_dn: "CN=ESTV-EASY,CN=eIAM,CN=eiam,DC=lds,DC=eiam-a,DC=admin,DC=ch"
    lc_ldap_group_name_attribute: "displayName"
    lc_ldap_group_display_name_attr: "*:displayName"
    lc_ldap_group_membership_search_filter: "(&(member=%v)(objectcategory=group))"
    lc_ldap_group_member_id_map: "memberOf:member"
    ad:
      lc_ad_gc_host: "lds.eiam-a.admin.ch"
      lc_ad_gc_port: "3269"
      lc_user_filter: "(&(uid=%v)(objectclass=inetOrgPerson))"
      lc_group_filter: "(&(member=%v)(objectcategory=group))"

  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    ## The dc_ssl_enabled parameter is used to support database connection over SSL for DB2/Oracle.
    dc_ssl_enabled: false
    ## The database_precheck parameter is used to enable or disable CPE/Navigator database connection check.
    ## If set to "true", then CPE/Navigator database connection check will be enabled.
    ## if set to "false", then CPE/Navigator database connection check will not be enabled.

    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "postgresql".  This should be the same as the
      ## GCD and object store configuration above.
      dc_database_type: "oracle"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB"
      database_name: "M_SSO_ICNCFG01"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
      ## Connection manager for a data source.
    ## The database configuration for UMS (User Management Service)
    dc_ums_datasource:
      ## Provide the datasource configuration for oauth
      ## Possible dc_ums_oauth_type values are "derby" for test only and "db2", "oracle", "sqlserver" and "postgresql" for production.
      ## This configuration should be the same as the other datasource configuration in the dc_ums_datasource section.
      ## db2 with HADR is automatically activated if dc_ums_oauth_alternate_hosts and dc_ums_oauth_alternate_ports are set.
      ## For Oracle RAC, specify the host name of the SCAN listener as the value of the dc_ums_oauth_host parameter
      dc_ums_oauth_type: "oracle"
      ## Provide the database server name or IP address of the database server.
      dc_ums_oauth_host: "IRHOSFN12.sz.admin.ch"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521". For MSSQL, the default is "1433"- For PostgreSQL, the default is "5432".
      dc_ums_oauth_port: "1521"
      ## Provide the name of the database for UMS.  For example: "UMSDB"
      dc_ums_oauth_name: "M_SSO_UMSOA01"
      dc_ums_oauth_schema: "M_SSO_UMSOA01"
      dc_ums_oauth_oracle_service_name: "IRHOSFN12SRV.bfi.admin.ch"
      dc_ums_oauth_ssl: false
      ## dc_ums_oauth_ssl_secret_name: "<Required>"
      ## For "oracle", "sqlserver" and "postgresql" provide the names of the driver files
      dc_ums_oauth_driverfiles: "ojdbc8.jar"
      ## For db2 HADR only
      ## dc_ums_oauth_alternate_hosts:
      ## dc_ums_oauth_alternate_ports:
      ## Provide the datasource configuration for the teamserver
      ## Possible dc_ums_teamserver_type values are "derby" for test only and "db2", "oracle", "sqlserver" and "postgresql" for production.
      ## This configuration should be the same as the other datasource configuration in the dc_ums_datasource section.
      ## db2 with HADR is automatically activated if dc_ums_teamserver_alternate_hosts and dc_ums_teamserver_alternate_ports are set.
      ## For Oracle RAC, specify the host name of the SCAN listener as the value of the dc_ums_teamserver_host parameter
      dc_ums_teamserver_type: "oracle"
      dc_ums_teamserver_host: "IRHOSFN12.sz.admin.ch"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521". For MS SQL, the default is "1433"- For PostgreSQL, the default is "5432".
      dc_ums_teamserver_port: "1521"
      ## Provide the name of the database for UMS teamserver.  For example: "UMSDB"
      dc_ums_teamserver_name: "M_SSO_UMSTS01"
      dc_ums_teamserver_schema: "M_SSO_UMSTS01"
      dc_ums_teamserver_oracle_service_name: "IRHOSFN12SRV.bfi.admin.ch"
      dc_ums_teamserver_ssl: false
      ## dc_ums_teamserver_ssl_secret_name: "<Required>"
      ## For "oracle", "sqlserver" and "postgresql" provide the names of the driver files
      dc_ums_teamserver_driverfiles: "ojdbc8.jar"
      ## For db2 HADR only
      ## dc_ums_teamserver_alternate_hosts:
      ## dc_ums_teamserver_alternate_ports:
    # database_precheck: true
    ## The database configuration for the GCD datasource for CPE
    dc_gcd_datasource: 
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "postgresql".
      dc_database_type: "oracle"
      ## The GCD non-XA datasource name.  The default value is "FNGCDDS".
      dc_common_gcd_datasource_name: "FNGCDDS"
      ## The GCD XA datasource name. The default value is "FNGCDDSXA".
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      ## Provide the database server name or IP address of the database server.
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the name of the database for the GCD for CPE.  For example: "GCDDB"
      database_name: "M_SSO_FNGCD"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_gcd_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ## If the database type is Db2 HADR, then complete the rest of the parameters below.
      ## Provide the database server name or IP address of the standby database server.
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for the document object store (DOCS) datasource for CPE
    dc_os_datasources:
    - dc_database_type: "oracle" ## Object store for BAW DOCS. Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "postgresql".  This should be the same as the GCD configuration above.
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "docs"
      ## The DOCS non-XA datasource name.  The default value is "BAWINS1DOCS".
      dc_common_os_datasource_name: "FNOSDS04"
      ## The DOCS XA datasource name.  The default value is "BAWINS1DOCSXA".
      dc_common_os_xa_datasource_name: "FNOSDSXA04"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "M_SSO_FNOS04"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
    - dc_database_type: "oracle" ## Design object store BAW DOS
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "dos"
      ## The DOS non-XA datasource name.  The default value is "BAWINS1DOS".
      dc_common_os_datasource_name: "FNOSDS01"
      ## The DOS XA datasource name.  The default value is "BAWINS1DOSXA".
      dc_common_os_xa_datasource_name: "FNOSDSXA01"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the name of the database for the object store 2 for CPE.  For example: "OS2DB"
      database_name: "M_SSO_FNOS01"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
    - dc_database_type: "oracle" ## Target object store BAW TOS
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "tos"
      ## The TOS non-XA datasource name.  The default value is "BAWINS1TOS".
      dc_common_os_datasource_name: "FNOSDS02"
      ## The TOS XA datasource name.  The default value is "BAWINS1TOSXA".
      dc_common_os_xa_datasource_name: "FNOSDSXA02"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the name of the database for the object store 3 for CPE.  For example: "OS3DB"
      database_name: "M_SSO_FNOS02"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
    - dc_database_type: "oracle" ## object store for AEOS
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "aeos"
      ## The AEOS non-XA datasource name.  The default value is "AEOS".
      dc_common_os_datasource_name: "AEOSDS01"
      ## The AEOS XA datasource name.  The default value is "AEOSXA".
      dc_common_os_xa_datasource_name: "AEOSDSXA01"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "IRHOSFN12.sz.admin.ch"
      ## Provide the name of the database for the object store AEOS for CPE.  For example: "AEOSDB"
      database_name: "M_SSO_FNOS03"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "1521"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
    - dc_database_type: "postgresql" ## Object store for BAW DOCS. Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle" or "postgresql".  This should be the same as the GCD configuration above.
      ## Provide the object store label for the object store.  The default value is "os" or not defined.
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "abc", then your OS secret must be defined as:
      ## --from-literal=abcDBUsername="<your os db username>" --from-literal=abcDBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If you have multiple object stores, then you need to define multiple datasource sections starting
      ## at "dc_database_type" element.
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "pgsdocs"
      ## The DOCS non-XA datasource name.  The default value is "BAWINS1DOCS".
      dc_common_os_datasource_name: "FNOSDS05"
      ## The DOCS XA datasource name.  The default value is "BAWINS1DOCSXA".
      dc_common_os_xa_datasource_name: "FNOSDSXA05"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "osotestpgs.ssotest.svc.cluster.local"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "M_SSO_FNOS05"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "5432"
      ## The name of the secret that contains the DB2 SSL certificate.
      ## database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      ## dc_oracle_os_jdbc_url: "jdbc:postgresql://osotestpgs.ssotest.svc.cluster.local:5432/M_SSO_FNOS05"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      ## dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      ## dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      ## dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      ## dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      ## dc_hadr_max_retries_for_client_reroute: 3
  ########################################################################
  ########   IBM User and Group Management Service configuration  ########
  ########################################################################
  ums_configuration:
    existing_claim_name: "operator-shared-pvc"
    existing_claim_name_logstore: "cp4a-shared-log-pvc"
    dedicated_pods: false
    replica_count: 1
    autoscaling:
      enabled: false
      min_replica: 1
      max_replica: 1
    # the full distinguished name of an LDAP group to bootstrap team administration
    teamserver:
      admingroup: CN=BIT-LS-appl-EFD-BIT-EASY-Server_SYST_P8_Admins,OU=EFD-BIT-EASY-Server,OU=Server,OU=BIT,OU=LESD,DC=sszadmbit,DC=sszad,DC=admin,DC=ch
  ########################################################################
  ########      IBM Business Automation Insights configuration    ########
  ########################################################################
  # bai_configuration:
  #############################################################################
  ######## IBM Business Automation Application server  configurations  ########
  ##  This section contains the configurations for                           ##
  ##  * App Engine Server                                                    ##
  ##  it's the optional component and will be installed when                 ##
  ##  patterns include: application, workflow, workstreams,                  ##
  ##                    workflow-workstreams or document_processing          ##
  #############################################################################
  application_engine_configuration:
  - name: workspace ## The application_engine_configuration is a list. You can deploy multiple instances of App Engine and assign different configurations for each instance.
    #Adjust this one if you created the secret with name other than the default
    admin_secret_name: "{{ meta.name }}-workspace-aae-app-engine-admin-secret"
    replica_size: 1
    #-----------------------------------------------------------------------
    # The app engine admin Secret template will be
    #-----------------------------------------------------------------------
    # apiVersion: v1
    # stringData:
    #   AE_DATABASE_PWD: "<Your database password>"
    #   AE_DATABASE_USER: "<Your database username>"
    #   REDIS_PASSWORD: "<Your Redis server password>"
    # kind: Secret
    # metadata:
    #   name: icp4adeploy-workspace-aae-app-engine-admin-secret
    # type: Opaque
    #-----------------------------------------------------------------------
    # Designate an existing LDAP user for the Application Engine admin user.
    # This user ID should be in the IBM Business Automation Navigator administrator role, as specified as appLoginUsername in the Navigator secret.
    # This user should also belong to the User Management Service (UMS) Teams admin group or the UMS Teams Administrators team.
    # If not, follow the instructions in "Completing post-deployment tasks for Business Automation Studio and Application Engine" in the IBM Documentation to add it to the Navigator Administrator role and UMS team server admin group.
    admin_user: "S00286"
    ## When the database type is Db2 you can set this to false, must be set to true when the database type is Oracle, PostgreSQL.
    use_custom_jdbc_drivers: true
    database:
      #-----------------------------------------------------------------------
      # Configuration required for configure DB2 for App engine server
      # If you are going to use Oracle. Please comment out this section
      #-----------------------------------------------------------------------
      #Provide the database server hostname for runtime application engine use
      host: "IRHOSFN12.sz.admin.ch"
      #Provide the database name for runtime application engine use
      #Please pay attention that if you are install authoring environment also.
      #The database used by playback server and this one should be different
      name: "M_SSO_FNOS03"
      #Provide the database server port for runtime application engine use
      port: "1521"
      ## If you set up DB2 HADR and want to use it, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      ## alternative_host:
      ## alternative_port:
      ## type: db2
      #-----------------------------------------------------------------------
      # Configuration required for configure Oracle for App engine server
      # If you are going to use Oracle. Please uncomment this section
      #-----------------------------------------------------------------------
      type: oracle
      # ## Required only when type is Oracle, both ssl and non-ssl. The format must be purely oracle descriptor like (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=<your database host/IP>)(PORT=<your database port>))(CONNECT_DATA=(SERVICE_NAME=<your oracle service name>)))
      oracle_url_without_wallet_directory: (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=IRHOSFN12.sz.admin.ch)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=IRHOSFN12SRV.bfi.admin.ch)))
      # ## Required only when type is Oracle and enable_ssl is true. The format must be purely oracle descriptor. SSO wallet directory must be specified and fixed to (MY_WALLET_DIRECTORY=/shared/resources/oracle/wallet).
      #  oracle_url_with_wallet_directory:
      # ## Required only when type is oracle and enable_ssl is true.
      ## oracle_sso_wallet_secret_name:
      # ## The persistent volume claim for custom JDBC Drivers if using the custom jdbc drivers is enabled
      custom_jdbc_pvc: "operator-shared-pvc"
      #-----------------------------------------------------------------------
      # Configuration required for configure PostgreSQL for App engine server
      # If you are going to use PostgreSQL. Please uncomment this section
      #-----------------------------------------------------------------------
      # type: PostgreSQL
      # ## The persistent volume claim for custom JDBC Drivers if using the custom jdbc drivers is enabled
      # custom_jdbc_pvc: <Required>
      # #Provide the database server hostname for runtime application engine use
      # host: "<Required>"
      # #Provide the database name for runtime application engine use
      # #Please pay attention that if you are install authoring environment also.
      # #The database used by playback server and this one should be different
      # name: "<Required>"
      # #Provide the database server port for runtime application engine use
      # port: "<Required>"
      # ## If you want to enable PostgreSQL Connection Fail-over, you must configure alternative_host and alternative_port. Otherwise, leave them blank.
      # alternative_host:
      # alternative_port:
      #-----------------------------------------------------------------------
      # SSL connection for database is enabled by default. Please input the secret name including cert
      #-----------------------------------------------------------------------
      enable_ssl: false
      ## db_cert_secret_name: <Required>
    #-----------------------------------------------------------------------
    # If you want better HA experience.
    # - Set the session.use_external_store to true
    # - Fill in your redis server information
    #-----------------------------------------------------------------------
    session:
      use_external_store: false
    redis:
      # Your external redis host/ip
      host:
      # Your external redis port
      port: '6379'
      # If your redis enabled TLS connection set this to true
      # You should add redis server CA certificate in tls_trust_list or trusted_certificate_list
      tls_enabled: false
      # If you are using Redis V6 and above with username fill in this field.
      # Otherwise leave this field as empty
      username:
  ########################################################################
  ########      IBM FileNet Content Manager configuration         ########
  ########################################################################
  ecm_configuration:
    show_sensitive_log: true
    cpe:
      no_log: false
      cpe_production_setting:
        jvm_customize_options: "-Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true,-Dfit.config.dir=/opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides/SUFAS/SUFAS,-Dfit.objectstore=SUFAS,-Dfit.application=SUFAS,-Dfit.stage=CASTOR"
      datavolume:
        existing_pvc_for_cpe_cfgstore: "cpe-cfgstore"
        existing_pvc_for_cpe_logstore: "cpe-logstore"
        existing_pvc_for_cpe_filestore: "cpe-filestore"
        existing_pvc_for_cpe_icmrulestore: "cpe-icmrulesstore"
        existing_pvc_for_cpe_textextstore: "cpe-textextstore"
        existing_pvc_for_cpe_bootstrapstore: "cpe-bootstrapstore"
        existing_pvc_for_cpe_fnlogstore: "cpe-fnlogstore"
      ## How many Content Platform Engine replicas to deploy
      replica_count: 1
    css:
      no_log: false
      datavolume:
        existing_pvc_for_css_cfgstore: "css-cfgstore"
        existing_pvc_for_css_logstore: "css-logstore"
        existing_pvc_for_css_tmpstore: "css-tempstore"
        existing_pvc_for_index: "css-indexstore"
        existing_pvc_for_css_customstore: "css-customstore"
      ## How many CSS replicas to deploy
      replica_count: 1
    cmis:
      no_log: false
      datavolume:
        existing_pvc_for_cmis_cfgstore: "cmis-cfgstore"
        existing_pvc_for_cmis_logstore: "cmis-logstore"
      ## How many CMIS to deploy
      replica_count: 1
    graphql:
      no_log: false
      datavolume:
        existing_pvc_for_graphql_cfgstore: "graphql-cfgstore"
        existing_pvc_for_graphql_logstore: "graphql-logstore"
      ## How many GQL replicas to deploy
      replica_count: 1
    tm:	
      datavolume:
        existing_pvc_for_tm_cfgstore: "tm-cfgstore"
        existing_pvc_for_tm_logstore: "tm-logstore"
        existing_pvc_for_tm_pluginstore: "tm-pluginstore"
      ## How many TM replicas to deploy
      replica_count: 1
    navigator_configuration:
      icn_production_setting:
##        jvm_customize_options: "-DELIM=;-Dfit.config.dir=/opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides;-Dfit.objectstore=SUFAS;-Dfit.application=SUFAS;-Dfit.stage=CASTOR"
        jvm_customize_options: "-Dfit.config.dir=/opt/ibm/wlp/usr/servers/defaultServer/configDropins/overrides/SUFAS/SUFAS,-Dfit.objectstore=SUFAS"
      datavolume:
        existing_pvc_for_icn_cfgstore: "icn-cfgstore"
        existing_pvc_for_icn_logstore: "icn-logstore"
        existing_pvc_for_icn_pluginstore: "icn-pluginstore"
        existing_pvc_for_icnvw_cachestore: "icn-vw-cachestore"
        existing_pvc_for_icnvw_logstore: "icn-vw-logstore"
        existing_pvc_for_icn_aspera: "icn-asperastore"
      ## How many BAN replicas to deploy
      replica_count: 1
      autoscaling:
        enabled: false
        min_replica: 1
        max_replica: 1
  ########################################################################
  ########   IBM Business Automation Workflow configuration     ########
  ########################################################################
  baw_configuration:
  - name: bawins1 ## The baw_configuration is a list. You can deploy multiple instances of Workflow Server and assign different configurations for each instance.
    ## Workflow Server capability.
    capabilities: "workflow"
    ## Workflow Server replica count
    replicas: "1"
    ## Designate an existing LDAP user for the Workflow Server admin user.
    admin_user: "S00286"
    ## Whether the Business Automation Workflow instance hosts federated Process Portal and integrates with Intelligent Task Prioritization.
    host_federated_portal: true
    ## The database configuration for Workflow Server
    database:
      ## Whether to enable Secure Sockets Layer (SSL) support for the Workflow Server database connection.
      enable_ssl: false
      ## Secret name for storing the database TLS certificate when an SSL connection is enabled. Required only when enable_ssl is true
      ## db_cert_secret_name: "<Required>"
      ## Workflow Server database type. Possible values are: db2, oracle, postgresql
      type: "oracle"
      ## Workflow Server database server name. It must be an accessible address, such as IP, hostname, or Kubernetes service name.
      ## This parameter is required.
      server_name: "IRHOSFN12.sz.admin.ch"
      ## Workflow Server database name. This parameter is required.
      database_name: "M_SSO_BAW01"
      ## Workflow Server database port. This parameter is required. For DB2, the default value is "50000"
      port: "1521"
      ## Workflow Server database secret name. This parameter is required.
      ## apiVersion: v1
      ## kind: Secret
      ## metadata:
      ##   name: ibm-baw-wfs-server-db-secret
      ## type: Opaque
      ## data:
      ##   dbUser: <DB_USER>
      ##   password: <DB_USER_PASSWORD>
      secret_name: "ibm-baw-wfs-server-db-secret"
      ## Oracle and PostgreSQL database connection string. 
      ## If the database type is Oracle, provide the Oracle database connection string. For example, jdbc:oracle:thin:@//<oracle_server>:1521/orcl. 
      ## If the database type is PostgreSQL, this parameter is optional, you can choose inputs server_name, database_name, and port with or without this parameter here. If you do not need this parameter when PostgreSQL, remove or comment this parameter.
      ## In any other cases, remove or comment this parameter.
      jdbc_url: "jdbc:oracle:thin:@//IRHOSFN12.sz.admin.ch:1521/IRHOSFN12SRV.bfi.admin.ch"
      ## Whether to use custom JDBC drivers. Set to true if you are using Oracle, PostgreSQL, or a special Db2 driver.
      use_custom_jdbc_drivers: true
      ## If use_custom_jdbc_drivers is set to true, input the name of the persistent volume claim (PVC) that binds to the persistent volume (PV) where the custom JDBC driver files are stored.
      ## If use_custom_jdbc_drivers is set to false, remove or comments this parameter.
      custom_jdbc_pvc: "operator-shared-pvc"
      ## The set of JDBC driver files.
      ## For DB2, it is normally "db2jcc4.jar db2jcc_license_cisuz.jar db2jcc_license_cu.jar".
      ## For Oracle, it is normally "ojdbc8.jar".
      ## For PostgreSQL, it is normally "postgresql-42.2.14.jar".
      jdbc_driver_files: 'ojdbc8.jar'
      ## hadr:
        ## Database standby host for high availability disaster recovery (HADR)
        ## To enable database HADR, configure both standby host and port.
        ## standbydb_host:
        ## Database standby port for HADR. To enable database HADR, configure both standby host and port.
        ## standbydb_port:
    storage:
      existing_pvc_for_dumpstore: "baw-dumpstore-pvc" 
      existing_pvc_for_logstore: "baw-logstore-pvc"
      existing_pvc_for_filestore: "baw-filestore-pvc"
    ## The configurations for content integration for attachment in process
    content_integration:
      ## Domain name for content integration. The value must be the same as initialize_configuration.ic_domain_creation.domain_name.
      domain_name: "P8SSOTest"
      ## Object Store name for content integration.
      ## The value must be an existing object store in CPE.
      ## If use initialize_configuration for the object store initilization, the value must be one of initialize_configuration.ic_obj_store_creation.object_stores.
      object_store_name: "SUFASBAWDOCS01"
    ## The configuration for case
    case:
      ## Domain name for CASE. The value must be the same as initialize_configuration.ic_domain_creation.domain_name.
      domain_name: "P8SSOTest"
      ## Design Object Store name of CASE.
      ## The value must be the same as the oc_cpe_obj_store_symb_name value of one of the object stores defined in initialize_configuration.ic_obj_store_creation.object_stores.
      object_store_name_dos: "SUFASStaging"
      ## Target Object Store name of CASE
      ## The value must be the same as the oc_cpe_obj_store_symb_name value of one of the object stores defined in initialize_configuration.ic_obj_store_creation.object_stores.
      object_store_name_tos: "SUFAS"
      connection_point_name_tos: "SUFAS_CP01"
      network_shared_directory_pvc: "icn-pluginstore"
  ########################################################################
  ########   IBM Process Federation Server configuration          ########
  ########################################################################
  pfs_configuration:
    custom_libs_pvc: "baw-customlibsstore-pvc"
    logs:
      storage:
        existing_pvc_name: "baw-logstore-pvc"
    dumps:
      storage:
        existing_pvc_name: "baw-dumpstore-pvc"
    # Number of initial Process Federation Server pods
    replicas: 1
  ##################################################################################
  ########   IBM Business Automation Machine Learning Server configuration  ########
  ##################################################################################
  ## baml_configuration:
    ## Intelligent Task Prioritization configuration
    ## if this configuration is enabled, setting bai_configuration.bpmn.install to true
    ## intelligent_task_prioritization:
    ## Workforce Insights configuration
    ## if this configuration is enabled, setting bai_configuration.bpmn.install to true and bai_configuration.bpmn.force_elasticsearch_timeseries to true
    ## workforce_insights:
    ## Workforce Insights pod count
    ##  replicas: 1
